{
  "hash": "dc8ae080d13ce0744f119e9700b14303",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Example Analysis: Breast Cancer Data\"\nformat:\n  html:\n    toc: true\n    number-sections: true\n    fig-cap: true\n    df-print: paged\n    highlight-style: tango\nbibliography: \"references.bib\"\n---\n\n\n\n\n\n\n## Background\n\n### Introduction\n\nThis analysis investigates the Breast Cancer Wisconsin (Diagnostic) dataset to evaluate the **Random Forest method's performance in predicting breast cancer diagnosis** and identify key variables that distinguish between malignant and benign tumors.\n\nThe intended audience includes **medical researchers and clinicians** focused on diagnostic features that support early detection and classification of breast cancer. \n\nThe dataset, originally collected by Dr. William H. Wolberg, is available through the [UCI Machine Learning Repository](https://doi.org/10.24432/C5DW2B) [@wolberg_breast_1993]. The repository hosts detailed tumor measurements essential for assessing feature importance in classification tasks.\n\nBelow is an image from the Kaggle Breast Cancer Wisconsin (Diagnostic) Data Set website, representing breast cancer cells [@kaggle_breast_cancer_image].\n\n![Breast Cancer Cells](https://storage.googleapis.com/kaggle-datasets-images/180/384/3da2510581f9d3b902307ff8d06fe327/dataset-cover.jpg)\n\n::: {.callout-note}\nThis analysis highlights diagnostic features in breast cancer, offering foundational insights that may support the development of advanced machine learning models.\n:::\n\n### Data Dictionary\n\nThe **data dictionary** below, detailing each variable's description and relevance to the analysis, particularly in identifying differences between benign and malignant tumor characteristics.\n\n| Variable                 | Description                                                                            |\n|--------------------------|----------------------------------------------------------------------------------------|\n| `id`                     | Unique identifier for each patient                                                     |\n| `Diagnosis`              | Diagnosis of the tumor (M = malignant, B = benign)                                     |\n| `radius_mean`            | Mean radius: mean of distances from center to points on the perimeter                  |\n| `texture_mean`           | Mean texture: standard deviation of gray-scale values                                  |\n| `perimeter_mean`         | Mean perimeter: mean size of the core tumor perimeter                                  |\n| `area_mean`              | Mean area: mean size of the core tumor area                                            |\n| `smoothness_mean`        | Mean smoothness: local variation in radius lengths                                     |\n| `compactness_mean`       | Mean compactness: calculated as (perimeter^2 / area - 1.0)                             |\n| `concavity_mean`         | Mean concavity: severity of concave portions of the contour                            |\n| `concave.points_mean`    | Mean concave points: number of concave portions of the contour                         |\n| `symmetry_mean`          | Mean symmetry: measure of symmetry of cell nucleus                                     |\n| `fractal_dimension_mean` | Mean fractal dimension: \"coastline approximation\" - 1                                  |\n| `radius_se`              | Standard error of radius                                                               |\n| `texture_se`             | Standard error of texture                                                              |\n| `perimeter_se`           | Standard error of perimeter                                                            |\n| `area_se`                | Standard error of area                                                                 |\n| `smoothness_se`          | Standard error of smoothness                                                           |\n| `compactness_se`         | Standard error of compactness                                                          |\n| `concavity_se`           | Standard error of concavity                                                            |\n| `concave.points_se`      | Standard error of concave points                                                       |\n| `symmetry_se`            | Standard error of symmetry                                                             |\n| `fractal_dimension_se`   | Standard error of fractal dimension                                                    |\n| `radius_worst`           | Worst or largest value of radius (mean of the three largest values)                    |\n| `texture_worst`          | Worst or largest value of texture                                                      |\n| `perimeter_worst`        | Worst or largest value of perimeter                                                    |\n| `area_worst`             | Worst or largest value of area                                                         |\n| `smoothness_worst`       | Worst or largest value of smoothness                                                   |\n| `compactness_worst`      | Worst or largest value of compactness                                                  |\n| `concavity_worst`        | Worst or largest value of concavity                                                    |\n| `concave.points_worst`   | Worst or largest value of concave points                                               |\n| `symmetry_worst`         | Worst or largest value of symmetry                                                     |\n| `fractal_dimension_worst`| Worst or largest value of fractal dimension                                            |\n\n## Exploratory Data Analysis\n\n### Data Wrangling\n\nThe data wrangling steps refine the Breast Cancer dataset for analysis.\n\n::: {.callout-tip} \nCorrelations help identify features highly associated with tumor diagnosis, aiding in feature selection for the model. \n:::\n\n**Steps:**\n\n1. Removed unnecessary columns (`id` and `X`) to focus on diagnostic features.\n2. Renamed the `diagnosis` column to `Diagnosis` for clarity.\n3. Dropped rows with missing values to ensure complete cases.\n4. Converted the `Diagnosis` column into a factor with levels \"B\" (benign) and \"M\" (malignant).\n5. Calculated correlations with the diagnosis to identify highly predictive variables, retaining only those with correlation > |0.3|.\n\n\n**Functions Used:**\n\n- `select()`: Excludes specific columns and selects highly correlated variables.\n- `rename()`: Renames `diagnosis` to `Diagnosis` for consistency.\n- `drop_na()`: Removes rows with missing values.\n- `mutate()`: Creates or transforms columns, such as converting `Diagnosis` to a factor and creating a numeric version for correlation.\n- `summarize()` + `across()`**: Calculates correlation values for each feature with `Diagnosis`.\n- `pivot_longer()`: Reshapes the data to make correlation results easier to filter.\n- `arrange()`: Sorts correlations by their absolute values.\n- `filter()`: Selects only variables with a high correlation to the target variable.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load data\ndata <- read.csv(\"example_analysis_data.csv\")\n\n# Data wrangling with dplyr and tidyr\ndata <- data %>%\n  select(-id, -X) %>%              \n  rename(Diagnosis = diagnosis) %>% \n  drop_na() %>%                     \n  mutate(Diagnosis = factor(Diagnosis, levels = c(\"B\", \"M\"))) \n\n# Calculate correlations and arrange by correlation with target variable (Diagnosis)\ndata_numeric <- data %>%\n  mutate(Diagnosis_num = as.numeric(Diagnosis) - 1) # Converts factor levels to 0 (B) and 1 (M)\n\ncorrelations <- data_numeric %>%\n  select(-Diagnosis) %>% \n  summarize(across(-Diagnosis_num, ~ cor(., data_numeric$Diagnosis_num, use = \"complete.obs\"))) %>%\n  pivot_longer(cols = everything(), names_to = \"variable\", values_to = \"correlation\") %>%\n  arrange(desc(abs(correlation)))\n\n# Print top 10 correlation variables\ntop_10_correlations <- correlations %>% head(10)\ncat(\"Top 10 Variables Most Correlated with Diagnosis:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTop 10 Variables Most Correlated with Diagnosis:\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(top_10_correlations)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 Ã— 2\n   variable             correlation\n   <chr>                      <dbl>\n 1 concave.points_worst       0.794\n 2 perimeter_worst            0.783\n 3 concave.points_mean        0.777\n 4 radius_worst               0.776\n 5 perimeter_mean             0.743\n 6 area_worst                 0.734\n 7 radius_mean                0.730\n 8 area_mean                  0.709\n 9 concavity_mean             0.696\n10 concavity_worst            0.660\n```\n\n\n:::\n\n```{.r .cell-code}\ncor_threshold <- 0.3\nhigh_corr_vars <- correlations %>%\n  filter(abs(correlation) >= cor_threshold) %>%\n  pull(variable)\n\n# Keep only highly correlated variables in the original data\ndata <- data %>%\n  select(all_of(high_corr_vars), Diagnosis)\n\ncat(\"Dimensions of the Refined Dataset:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDimensions of the Refined Dataset:\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 569  24\n```\n\n\n:::\n:::\n\n\n\n\n::: {.callout-note}\nThe refined dataset contains 569 rows and 24 columns, focusing on variables with significant correlations to the diagnosis. The ten variables most strongly correlated with breast cancer diagnosis are led by `concave.points_worst` (0.79) and `perimeter_worst` (0.78).\n:::\n\n### Target Variable Distribution\nThis bar plot shows the distribution of benign and malignant diagnoses in the dataset.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot the distribution of tumor diagnoses\nggplot(data, aes(x = Diagnosis, fill = Diagnosis)) +\n  geom_bar() +\n  geom_text(stat='count', aes(label=..count..), vjust=-0.3) +\n  labs(\n    title = \"Distribution of Tumor Diagnoses in the Dataset\",\n    subtitle = \"Benign tumors are more frequent than malignant tumors\",\n    caption = \"This plot shows the count of benign and malignant tumors in the dataset\",\n    x = \"Tumor Diagnosis\",\n    y = \"Count of Cases\"\n  ) +\n  scale_fill_manual(values = c(\"B\" = \"#00CCCC\", \"M\" = \"salmon\")) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](example_analysis_files/figure-html/target-variable-1.png){width=960}\n:::\n:::\n\n\n\n\n::: {.column-margin}\nBenign tumors are more common than malignant tumors, providing a slightly imbalanced but sufficient dataset for training.\n::: \n\n### Feature Distribution by Diagnosis\n\nThis box plot compares the distribution of concave.points_mean and perimeter_mean between benign and malignant tumors, both of which are highly correlated with the target variable. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compare the distribution of 'concave.points_mean' and 'perimeter_mean' across diagnoses using a box plot\nggplot(data %>% select(Diagnosis, concave.points_mean, perimeter_mean) %>%\n         pivot_longer(cols = -Diagnosis, names_to = \"Feature\", values_to = \"Value\"), \n       aes(x = Diagnosis, y = Value, fill = Diagnosis)) +\n  geom_boxplot(alpha = 0.7) +\n  facet_wrap(~ Feature, scales = \"free\") +\n  labs(\n    title = \"Distribution of Selected Features by Tumor Diagnosis\",\n    subtitle = \"Both concave.points_mean and perimeter_mean tend to be higher in malignant (M) tumors\",\n    caption = \"Box plots showing the distribution of concave.points_mean and perimeter_mean by tumor diagnosis.\",\n    x = \"Tumor Diagnosis\",\n    y = \"Feature Value\"\n  ) +\n  scale_fill_manual(values = c(\"B\" = \"#00CCCC\", \"M\" = \"salmon\")) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](example_analysis_files/figure-html/faceted-plot-1.png){width=960}\n:::\n:::\n\n\n\n\n::: {.column-margin}\nBoth concave.points_mean and perimeter_mean are notably higher in malignant tumors, indicating their potential as diagnostic markers for identifying malignancy.\n::: \n\n## Modeling\n\n### Principal Component Analysis\n\nThe dataset's dimensionality was significantly reduced using PCA, which allows the identification and removal of less relevant features without significant loss of information [@hasan2021review].\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform PCA for dimensionality reduction\npca <- prcomp(data %>% select(-Diagnosis), scale = TRUE)\n\n# Variance explained by each component\nvar_explained <- data.frame(\n  Component = 1:length(pca$sdev), \n  Variance = (pca$sdev)^2, \n  Proportion = (pca$sdev)^2 / sum((pca$sdev)^2), \n  Cumulative = cumsum((pca$sdev)^2 / sum((pca$sdev)^2))\n)\n\n# Scree Plot\nggplot(var_explained[1:10,], aes(x = Component, y = Proportion)) + \n  geom_bar(stat = \"identity\", fill = \"salmon\") +\n  geom_line(color = \"black\") +\n  geom_point(color = \"black\") +\n  labs(\n    title = \"Explained Variance by Principal Components\",\n    subtitle = \"The first few components capture the majority of variance\",\n    caption = \"Scree plot showing the variance explained by the first 10 components\",\n    x = \"Principal Component\",\n    y = \"Percentage of Explained Variance\"\n  )\n```\n\n::: {.cell-output-display}\n![](example_analysis_files/figure-html/pca-analysis-1.png){width=960}\n:::\n:::\n\n\n\n\n::: {.column-margin}\nPCA helped identify six components explaining 88.76% of variance.\n:::\n\n### Data Splitting\n\nThe data was split into an 80:20 ratio for the training and test sets.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Split the data into training and testing sets\nset.seed(101)\nsplit <- sample.split(data$Diagnosis, SplitRatio = 0.8)\ntrain <- subset(data, split == TRUE)\ntest <- subset(data, split == FALSE)\n```\n:::\n\n\n\n\nThe training set has 455 samples, and the test set has 114 samples, with consistent diagnosis distribution.\n\n\n### Random Forest Model Training\n\nThe Random Forest method works by constructing a large number of decision trees during training and outputting the most common class [@romano2023modeling]. A Random Forest model with 10-fold cross-validation is trained to predict tumor diagnoses based on the dataset features, using 1000 trees.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set up cross-validation\ncontrol <- trainControl(method = \"cv\", number = 10)\n\n# Random Forest\nrf_model <- train(Diagnosis ~ ., data = train, method = \"rf\", ntree = 1000, trControl = control, importance = TRUE)\n```\n:::\n\n\n\n\n### Model Evaluation\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Evaluate the Random Forest model on the test set\nevaluate_model <- function(model, test_data) {\n  predictions <- predict(model, newdata = test_data)\n  cm <- confusionMatrix(predictions, test_data$Diagnosis)\n  auc_value <- auc(roc(test_data$Diagnosis, as.numeric(predictions)))\n  data.frame(\n    Accuracy = cm$overall['Accuracy'],\n    Sensitivity = cm$byClass['Sensitivity'],\n    Specificity = cm$byClass['Specificity'],\n    AUC = auc_value\n  )\n}\n\nrf_results <- evaluate_model(rf_model, test)\nrf_results\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Accuracy\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sensitivity\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Specificity\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"AUC\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.9646018\",\"2\":\"0.9859155\",\"3\":\"0.9285714\",\"4\":\"0.9572435\",\"_rn_\":\"Accuracy\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n::: {.callout-important}\nThe model achieves high accuracy and AUC, indicating effective classification of benign and malignant cases.\n:::\n\n## Summary\nThe analysis of the Breast Cancer Wisconsin (Diagnostic) dataset revealed that features such as `concave.points_worst`, `perimeter_worst`, and `concave.points_mean` exhibit strong correlations with tumor diagnosis. Dimensionality reduction through PCA indicated that a few principal components account for the majority of variance, efficiently reducing feature redundancy. A Random Forest model, trained and evaluated on the dataset, achieved high accuracy and AUC, demonstrating its effectiveness in tumor classification. These findings provide essential insights into diagnostic markers, supporting potential advancements in early cancer detection and classification models.\n\n## Functions Used\n\n- **dplyr**: `select`, `rename`, `filter`, `mutate`, `count`, `arrange`, `summarize`, `across`\n- **tidyr**: `pivot_longer`, `drop_na`\n- **ggplot2**: `geom_bar`, `geom_boxplot`, `geom_line`, `geom_point`, `facet_wrap`\n\n## Checklist\n\n- [x] **State the Question**: Describe the main question being addressed in the analysis. ([Introduction](#introduction))\n- [x] **Audience**: Identify the intended audience for this analysis. ([Introduction](#introduction))\n- [x] **Data Source**: Link to the source of the data and provide a brief description of its origin. ([Introduction](#introduction))\n- [x] **Data Dictionary**: Include a link to or display the data dictionary on the webpage. ([Data Dictionary](#data-dictionary))\n- [x] **Data Wrangling**: Use at least five unique functions from the `dplyr` or `tidyr` package for data wrangling. ([Data Wrangling](#data-wrangling))\n- [x] **Visualization**: Include at least three plots, each with different `geom_*()` functions from `ggplot2` (or equivalent). ([Target Variable Distribution](#target-variable-distribution), [Feature Distribution by Diagnosis](#feature-distribution-by-diagnosis), [Explained Variance by Principal Components](#explained-variance-by-principal-components))\n- [x] **Plot Titles and Labels**: Ensure all plots have titles, subtitles, captions, and axis labels that are clear and understandable. ([Target Variable Distribution](#target-variable-distribution), [Feature Distribution by Diagnosis](#feature-distribution-by-diagnosis), [Explained Variance by Principal Components](#explained-variance-by-principal-components))\n- [x] **Faceting**: Use `facet_grid()` or `facet_wrap()` in at least one plot for segmented views. ([Feature Distribution by Diagnosis](#feature-distribution-by-diagnosis))\n- [x] **External Image or Table**: Include at least one image or table sourced from the web or locally saved (not self-created). ([Introduction](#introduction))\n- [x] **Callout Blocks**: Include at least two distinct callout blocks to emphasize important points. ([Introduction](#introduction)), ([Data Wrangling](#data-wrangling), [Model Evaluation](#model-evaluation))\n- [x] **References**: Use a `.bib` file with at least three unique citations (e.g., data sources, methods used). ([Background](#background), [Principal Component Analysis](#principal-component-analysis), [Random Forest Model Training](#random-forest-model-training))\n- [x] **Margin Content**: Add at least one piece of margin content to enhance the analysis. ([Target Variable Distribution](#target-variable-distribution), [Feature Distribution by Diagnosis](#feature-distribution-by-diagnosis), [Principal Component Analysis](#principal-component-analysis))\n- [x] **Summary**: Conclude with a 4-6 sentence paragraph summarizing the analysis results. ([Summary](#summary))\n- [x] **Function List**: At the end, list each function used from `dplyr`, `tidyr`, and `ggplot2` to help verify that all requirements are met. ([Functions Used](#functions-used))",
    "supporting": [
      "example_analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}